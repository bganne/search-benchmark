// $Id: DAFQuery.idl,v 1.1 2003/05/29 00:26:31 alex Exp $
//File: DAFQuery.idl
#ifndef _DAF_QUERY_IDL_
#define _DAF_QUERY_IDL_

#include <DAFDescriptions.idl>

#pragma prefix "omg.org"
module DAFQuery
{
	// properties and classes are represented by resource identifiers
	// imported from the identifiers module.
	typedef DAFIdentifiers::ResourceID ResourceID;
	typedef DAFIdentifiers::ResourceID ClassID;
	typedef DAFIdentifiers::ResourceID PropertyID;
	typedef DAFIdentifiers::ResourceIDSequence PropertySequence;

	// results are resource descriptions from the descriptions module
	typedef DAFDescriptions::ResourceDescription ResourceDescription;																			
	typedef DAFDescriptions::ResourceDescriptionIterator
			ResourceDescriptionIterator;									

	// queries that perform navigation use the association concept
	struct Association
	{
		PropertyID			property;
		ClassID			type;
		boolean			inverse;
	};
	typedef sequence<Association> AssociationSequence;

	// exceptions generated by queries
	exception UnknownAssociation { string reason; };
	exception UnknownResource { string reason; };
	exception QueryError { string reason; };

	// the query service
	interface ResourceQueryService 
	{
		ResourceDescription get_values( 
			in ResourceID resource, 
			in PropertySequence properties) 
			raises( UnknownResource, QueryError );

		ResourceDescriptionIterator get_extent_values(
			in PropertySequence properties, 
			in ClassID class_id )
			raises (UnknownResource, QueryError);

		ResourceDescriptionIterator get_related_values(
			in PropertySequence properties, 
			in Association association, 
			in ResourceID source )
			raises ( UnknownResource, UnknownAssociation, QueryError );

		ResourceDescriptionIterator get_descendent_values(
			in PropertySequence properties, 
			in AssociationSequence path, 
			in ResourceIDSequence sources,
			out AssociationSequence tail )
			raises ( UnknownResource, QueryError );
	};
};
#endif // _DAF_QUERY_IDL_

	
